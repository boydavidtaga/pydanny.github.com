<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pydanny - audrey</title><link href="https://pydanny.com/" rel="alternate"></link><link href="https://pydanny.com/feeds/audrey.atom.xml" rel="self"></link><id>https://pydanny.com/</id><updated>2014-10-24T09:00:00-07:00</updated><entry><title>Homemade Pumpkin Puree</title><link href="https://pydanny.com/homemade-pumpkin-puree.html" rel="alternate"></link><published>2014-10-24T09:00:00-07:00</published><updated>2014-10-24T09:00:00-07:00</updated><author><name>Daniel-Roy-Greenfeld</name></author><id>tag:pydanny.com,2014-10-24:/homemade-pumpkin-puree.html</id><summary type="html">&lt;p&gt;I'm of the opinion that homemade pumpkin puree is better than what comes out of a &lt;a class="reference external" href="http://www.amazon.com/Farmers-Market-Organic-Pumpkin-15-Ounce/dp/B0062A87HA/ref=sr_1_1?tag=mlinar-20"&gt;can&lt;/a&gt;. Some people disagree with me, but I argue that the delicate, sensitive flavor of pumpkin is easy to overwhelm. Simply put, if you overload it with sugar and/or that mixture of cinnamon â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm of the opinion that homemade pumpkin puree is better than what comes out of a &lt;a class="reference external" href="http://www.amazon.com/Farmers-Market-Organic-Pumpkin-15-Ounce/dp/B0062A87HA/ref=sr_1_1?tag=mlinar-20"&gt;can&lt;/a&gt;. Some people disagree with me, but I argue that the delicate, sensitive flavor of pumpkin is easy to overwhelm. Simply put, if you overload it with sugar and/or that mixture of cinnamon, ginger, nutmeg, cloves and allspice called &lt;a class="reference external" href="http://www.amazon.com/Culinary-Secrets-Pumpkin-Pie-Spice/dp/B00OGNFZA2/ref=sr_1_14?tag=mlinar-20"&gt;pumpkin spice&lt;/a&gt;, canned is going to taste identical (if not better).&lt;/p&gt;
&lt;p&gt;Before you belabor the point of homemade versus canned, the same argument for overloading quality ingredients with sugar and spices can be made for coffee, tea, flour, steak, etc.&lt;/p&gt;
&lt;p&gt;In any case, homemade pumpkin puree is really easy to make. At home, my &lt;a class="reference external" href="https://twitter.com/audreyr"&gt;wife&lt;/a&gt; and I use it as the base for all our pumpkin dishes.&lt;/p&gt;
&lt;div class="section" id="ingredients"&gt;
&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;1 pie pumpkin&lt;/strong&gt; &lt;em&gt;(You can substitute regular pumpkins, but pie pumpkins are easier and taste better)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1 tablespoon of olive oil&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="instructions"&gt;
&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;p&gt;First, get out your &lt;a class="reference external" href="http://www.amazon.com/Microban-Antimicrobial-Cutting-Board-Green/dp/B00BM9939C/ref=sr_1_1?tag=mlinar-20"&gt;cutting board&lt;/a&gt; and &lt;a class="reference external" href="http://www.amazon.com/Victorinox-Fibrox-8-Inch-Chefs-Knife/dp/B000638D32/ref=zg_bs_289857_1?tag=mlinar-20"&gt;french knife&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-uncut.jpg"&gt;&lt;img alt="" class="align-center" id="pumpkin-uncut" src="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-uncut.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Cut the pumpkin in half. Don't worry about getting the halves perfectly equal, it doesn't matter. What does matter is being careful with your knife!&lt;/p&gt;
&lt;p&gt;I start with the point of the knife, puncturing into the middle. Then I carefully slice around the whole pumpkin, keeping the point in the middle. It does take a little bit of effort, but so does carving a jack o-lantern.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/slicing-pumpkin.jpg"&gt;&lt;img alt="" class="align-center" id="slicing-pumpkin" src="https://pydanny.com/static/homemade-pumpkin-puree/slicing-pumpkin.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Once halved the pumpkin should look like the photo below. Note how the edges aren't perfect!&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/halved-pumpkin.jpg"&gt;&lt;img alt="" class="align-center" id="halved-pumpkin" src="https://pydanny.com/static/homemade-pumpkin-puree/halved-pumpkin.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Set the over to 350 degrees fahrenheit, or about 176 degrees celsius.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/setting-oven.jpg"&gt;&lt;img alt="" class="align-center" id="setting-oven" src="https://pydanny.com/static/homemade-pumpkin-puree/setting-oven.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Scoop out the seeds into a &lt;a class="reference external" href="http://www.amazon.com/iSi-Basics-Flexible-Silicone-Mixing/dp/B000S17WNO/ref=sr_1_7?tag=mlinar-20"&gt;mixing bowl&lt;/a&gt;. You can use a spoon or your hand. Don't worry about getting the stringy material out of the pumpkin. It's perfectly edible and provides a slightly stronger pumpkin flavor when you are done.&lt;/p&gt;
&lt;p&gt;In a future recipe I'll describe how you can roast the seeds.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/scoop-out-pumpkin.jpg"&gt;&lt;img alt="" class="align-center" id="scoop-out-pumpkin" src="https://pydanny.com/static/homemade-pumpkin-puree/scoop-out-pumpkin.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Spread the spoonful of &lt;a class="reference external" href="http://www.amazon.com/California-Olive-Ranch-Extra-Virgin/dp/B004ULUVU4/ref=sr_1_1?tag=mlinar-20"&gt;olive oil&lt;/a&gt; on the parts of the halved pumpkin touched by the french knife. The goal is to not have the pumpkin stick to the &lt;a class="reference external" href="http://www.amazon.com/Nordic-Ware-Natural-Aluminum-Commercial/dp/B000G0KJG4/ref=sr_1_1?tag=mlinar-20"&gt;cookie sheet&lt;/a&gt; while also not overwhelming the delicate flavor with olive oil.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/oiling-pumpkins.jpg"&gt;&lt;img alt="" class="align-center" id="oiling-pumpkins" src="https://pydanny.com/static/homemade-pumpkin-puree/oiling-pumpkins.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Put the pumpkin halves face down on the cookie sheet then place that in the oven.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/oven.jpg"&gt;&lt;img alt="" class="align-center" id="oven" src="https://pydanny.com/static/homemade-pumpkin-puree/oven.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;In about 45-60 minutes the pumpkins will be done. The skin of the pumpkin should be a little darker and perhaps take on mottling.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/done-pumpkins.jpg"&gt;&lt;img alt="" class="align-center" id="done-pumpkins" src="https://pydanny.com/static/homemade-pumpkin-puree/done-pumpkins.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Wait about 5-10 minutes for the pumpkin to cool. Then peel off all the skin and throw it away. In the photo below you can see where I took the stem of the pumpkin and just pulled off the skin. The little hole in the pumpkin flesh itself is where we tested the flavor with a spoon (it was yummy).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/peeling-pumpkin.jpg"&gt;&lt;img alt="" class="align-center" id="peeling-pumpkins" src="https://pydanny.com/static/homemade-pumpkin-puree/peeling-pumpkin.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Using a big spoon, scoop the cooked pumpkin into another mixing bowl. In this case, we dumped it right into the soup pot. It will fall apart in the process, but that's okay!&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/cooked-pumpkin.jpg"&gt;&lt;img alt="" class="align-center" id="cooked-pumpkin" src="https://pydanny.com/static/homemade-pumpkin-puree/cooked-pumpkin.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Puree the pumpkin! We prefer the &lt;a class="reference external" href="http://www.amazon.com/Cuisinart-HB-155PC-Blender-Blending-Attachments/dp/B00DOK0R2O/ref=sr_1_3?tag=mlinar-20"&gt;immersion blender&lt;/a&gt; as it's less setup/cleanup than a food processer or blender. Not to mention you can do it right in the soup pot.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-puree.jpg"&gt;&lt;img alt="" class="align-center" id="pumpkin-puree" src="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-puree.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Use the puree in something yummy! Here we used homemade pumpkin puree, milk, chicken stock, and spices to make an healthy, savory pumpkin soup. It's been dressed with a dab of sour cream and roasted pumpkin seeds.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-soup.jpg"&gt;&lt;img alt="" class="align-center" id="pumpkin-soup" src="https://pydanny.com/static/homemade-pumpkin-puree/pumpkin-soup.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Yes, I'll be documenting our pumpkin soup recipe in a future blog post. :-)&lt;/p&gt;
&lt;/div&gt;
</content><category term="recipe"></category><category term="ingredients"></category><category term="audrey"></category><category term="pumpkin"></category><category term="halloween"></category></entry><entry><title>I Married Audrey Roy</title><link href="https://pydanny.com/i-married-audrey-roy.html" rel="alternate"></link><published>2014-01-04T09:30:00-08:00</published><updated>2014-01-04T09:30:00-08:00</updated><author><name>Daniel-Roy-Greenfeld</name></author><id>tag:pydanny.com,2014-01-04:/i-married-audrey-roy.html</id><summary type="html">&lt;p&gt;In a small, private family ceremony on December 27th, 2013 I exchanged wedding vows with &lt;a class="reference external" href="http://audreyr.com"&gt;Audrey&lt;/a&gt; &lt;a class="reference external" href="http://audreymroy.com"&gt;Roy&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" id="vows" src="https://s3.amazonaws.com/pydanny/vows.jpg" /&gt;
&lt;p&gt;It was an incredible day. I'll savor the moment we promised ourselves to each other in matrimony forever. She is the other half of my soul, and since we've become husband and wife â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a small, private family ceremony on December 27th, 2013 I exchanged wedding vows with &lt;a class="reference external" href="http://audreyr.com"&gt;Audrey&lt;/a&gt; &lt;a class="reference external" href="http://audreymroy.com"&gt;Roy&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" id="vows" src="https://s3.amazonaws.com/pydanny/vows.jpg" /&gt;
&lt;p&gt;It was an incredible day. I'll savor the moment we promised ourselves to each other in matrimony forever. She is the other half of my soul, and since we've become husband and wife, everything has changed. The world is simply a better place to be.&lt;/p&gt;
&lt;p&gt;Audrey wore my mother's 1961 wedding dress and her wedding ring was my grandmother's. These symbolized the close bond Audrey has with my family. I was wearing a tuxedo and for the occasion taught myself how to tie a bow tie. The flowers were a combined effort of Audrey, her aunt, and her cousin. Audrey made the wedding cake figurines herself.&lt;/p&gt;
&lt;div class="section" id="honeymoon"&gt;
&lt;h2&gt;Honeymoon&lt;/h2&gt;
&lt;p&gt;We experienced so much of the world in 2013 that we don't feel inclined to race off to an exotic honeymoon quite yet. We are tentatively thinking of a road trip in the USA, but are open to suggestions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="future-celebrations"&gt;
&lt;h2&gt;Future Celebrations&lt;/h2&gt;
&lt;p&gt;We're thinking of planning a fun, casual outdoor reception in late March in Southern California. We're not absolutely certain yet, because at big events you barely have time to say hello to everyone. Still, it could be fun...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="more-photos"&gt;
&lt;h2&gt;More Photos&lt;/h2&gt;
&lt;p&gt;This image is a link to a short collection of photos from the incredible photographer, Lindy DiMaio. More to come:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://www.2scoops.co/3p/"&gt;&lt;img alt="" class="align-center" id="newlywed-couple" src="https://s3.amazonaws.com/pydanny/couple.jpg" /&gt;&lt;/a&gt;
&lt;/div&gt;
</content><category term="holidays"></category><category term="family"></category><category term="friends"></category><category term="audrey"></category><category term="resolutions"></category></entry><entry><title>Cookiecutter: Project Templates Made Easy</title><link href="https://pydanny.com/cookie-project-templates-made-easy.html" rel="alternate"></link><published>2013-08-17T12:00:00-07:00</published><updated>2013-08-17T12:00:00-07:00</updated><author><name>Daniel-Roy-Greenfeld</name></author><id>tag:pydanny.com,2013-08-17:/cookie-project-templates-made-easy.html</id><summary type="html">&lt;p&gt;Yesterday, Jeff Knupp wrote an amazing how-to article called &amp;quot;&lt;a class="reference external" href="http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"&gt;Open Sourcing a Python Project the Right Way&lt;/a&gt;&amp;quot;. While I was reading it, I was rather pleased by just how close it is to my own practices. Considering Jeff's amazing &lt;a class="reference external" href="http://www.amazon.com/gp/product/B00B5KG0F8/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00B5KG0F8&amp;amp;linkCode=as2&amp;amp;tag=mlinar-20"&gt;Writing&lt;/a&gt; &lt;a class="reference external" href="http://www.amazon.com/gp/product/B00B5VXMRG/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00B5VXMRG&amp;amp;linkCode=as2&amp;amp;tag=mlinar-20"&gt;Idiomatic&lt;/a&gt; &lt;a class="reference external" href="http://www.jeffknupp.com/writing-idiomatic-python-ebook/"&gt;Python&lt;/a&gt;, it meant I was on the right track â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday, Jeff Knupp wrote an amazing how-to article called &amp;quot;&lt;a class="reference external" href="http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"&gt;Open Sourcing a Python Project the Right Way&lt;/a&gt;&amp;quot;. While I was reading it, I was rather pleased by just how close it is to my own practices. Considering Jeff's amazing &lt;a class="reference external" href="http://www.amazon.com/gp/product/B00B5KG0F8/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00B5KG0F8&amp;amp;linkCode=as2&amp;amp;tag=mlinar-20"&gt;Writing&lt;/a&gt; &lt;a class="reference external" href="http://www.amazon.com/gp/product/B00B5VXMRG/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00B5VXMRG&amp;amp;linkCode=as2&amp;amp;tag=mlinar-20"&gt;Idiomatic&lt;/a&gt; &lt;a class="reference external" href="http://www.jeffknupp.com/writing-idiomatic-python-ebook/"&gt;Python&lt;/a&gt;, it meant I was on the right track.&lt;/p&gt;
&lt;p&gt;The downside, of course, is implementation. Creating reusable Python packages has always been annoying. There are no defined/maintained best practices (especially for setup.py), so you end up cutting and pasting hacky, poorly understood, often legacy code from one project to the other. Some of it does nothing and some of it fails catastrophically on Python 3. There's a term for this sort of behavior, and it's called &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Cargo_cult_programming"&gt;Cargo Cult programming&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fortunately, while I was &lt;a class="reference external" href="https://pydanny.com/made-up-statistics.html#debate-statistics"&gt;ranting&lt;/a&gt; and &lt;a class="reference external" href="http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"&gt;Jeff&lt;/a&gt; (and &lt;a class="reference external" href="http://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/"&gt;Hynek Schlawack&lt;/a&gt;) was writing, someone was making &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="cookiecutter-does-one-thing-and-it-does-it-well"&gt;
&lt;h2&gt;cookiecutter does one thing and it does it well&lt;/h2&gt;
&lt;p&gt;What &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt; does is make creating and maintaining project templates easy and intuitive. This allow developers of all languages (not just Python) the ability to break free from cargo-cult configuration and follow patterns dictated by the experts who present their own cookiecutter templates. So if you don't like how the author of cookiecutter's creates her projects, you can use someone else's or roll your own.&lt;/p&gt;
&lt;p&gt;Okay, enough talk, let's use cookiecutter to build a Python project. Assuming you have &lt;a class="reference external" href="http://www.virtualenv.org/"&gt;virtualenv&lt;/a&gt; installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install cookiecutter
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: In the works is a &lt;a class="reference external" href="https://github.com/mxcl/homebrew"&gt;Homebrew&lt;/a&gt; package, and possibly packages for the various Linux distributions as well.&lt;/p&gt;
&lt;p&gt;Done? Okay, now use cookiecutter to create your Python project. For this example, I'm going to create a sample project called &amp;quot;&lt;em&gt;cheese&lt;/em&gt;&amp;quot;.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git
Cloning into &lt;span class="s1"&gt;&amp;#39;cookiecutter-pypackage&amp;#39;&lt;/span&gt;...
remote: Counting objects: &lt;span class="m"&gt;183&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;/100&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total &lt;span class="m"&gt;183&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;87&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;161&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;70&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Receiving objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;183&lt;/span&gt;/183&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;29&lt;/span&gt;.36 KiB &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; bytes/s, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving deltas: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;87&lt;/span&gt;/87&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Checking connectivity... &lt;span class="k"&gt;done&lt;/span&gt;
full_name &lt;span class="o"&gt;(&lt;/span&gt;default is &lt;span class="s2"&gt;&amp;quot;Audrey Roy&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;? Daniel Greenfeld
project_name &lt;span class="o"&gt;(&lt;/span&gt;default is &lt;span class="s2"&gt;&amp;quot;your project&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;? cheese
... snip &lt;span class="k"&gt;for&lt;/span&gt; brevity
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See how it asks my full name? Well, at this point, &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt; begins to ask a number of questions. These questions are actually specified in the &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage/blob/master/cookiecutter.json"&gt;cookiecutter.json&lt;/a&gt; file for &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage"&gt;cookiecutter-pypackage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you've answered everything that &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage"&gt;cookiecutter-pypackage&lt;/a&gt; wants, it generates your project. Let's go and check:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tree cheese
cheese/
â”œâ”€â”€ AUTHORS.rst
â”œâ”€â”€ CONTRIBUTING.rst
â”œâ”€â”€ HISTORY.rst
â”œâ”€â”€ LICENSE
â”œâ”€â”€ MANIFEST.in
â”œâ”€â”€ README.rst
â”œâ”€â”€ docs
â”‚   â”œâ”€â”€ Makefile
â”‚   â”œâ”€â”€ authors.rst
â”‚   â”œâ”€â”€ conf.py
â”‚   â”œâ”€â”€ contributing.rst
â”‚   â”œâ”€â”€ history.rst
â”‚   â”œâ”€â”€ index.rst
â”‚   â”œâ”€â”€ installation.rst
â”‚   â”œâ”€â”€ make.bat
â”‚   â”œâ”€â”€ readme.rst
â”‚   â””â”€â”€ usage.rst
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ setup.py
â”œâ”€â”€ simplicity
â”‚   â”œâ”€â”€ __init__.py
â”‚   â””â”€â”€ simplicity.py
â”œâ”€â”€ tests
â”‚   â”œâ”€â”€ __init__.py
â”‚   â””â”€â”€ test_simplicity.py
â””â”€â”€ tox.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While there are &lt;em&gt;some&lt;/em&gt; differences from Jeff Knupp's example in his &lt;a class="reference external" href="http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"&gt;article&lt;/a&gt; (ReStructuredText vs Markdown, location of tests, etc), I would argue that the general vision is the same. Better yet, if Jeff (or someone) wants to implement Jeff's pattern, they can.&lt;/p&gt;
&lt;p&gt;In fact...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-cookiecutter-templates-is-easy-and-intuitive"&gt;
&lt;h2&gt;Creating cookiecutter templates is easy and intuitive&lt;/h2&gt;
&lt;p&gt;All you have to do is:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage"&gt;cookiecutter-pypackage&lt;/a&gt; &lt;strong&gt;and rename it&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make the changes you desire.&lt;/strong&gt; You can change anything you want, the setup.py, the test handling, or perhaps add or remove from the questions specified in &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage/blob/master/cookiecutter.json"&gt;cookiecutter.json&lt;/a&gt;. Right now &lt;strong&gt;repo_name&lt;/strong&gt; is a mandatory &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage/blob/master/cookiecutter.json"&gt;cookiecutter.json&lt;/a&gt; field, but there is an issue submitted to have that changed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remember that renders everything in&lt;/strong&gt; &lt;a class="reference external" href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;. Questions asked by &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage/blob/master/cookiecutter.json"&gt;cookiecutter.json&lt;/a&gt; are rendered to the project's files (be those files in Python, Javascript, HTML, etc). So if you add a field to &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-pypackage/blob/master/cookiecutter.json"&gt;cookiecutter.json&lt;/a&gt;, all you have to do to see it in a templates is write:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;# Place in Python, HTML. Javascript, CSS, Markdown, or any other plaintext format.&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;cookiecutter.my_new_field&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;&lt;strong&gt;Submit a pull request to&lt;/strong&gt; &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt; asking for their project to be listed on the README.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's not hard. In fact, there is already a growing ecosystem of &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter#available-templates"&gt;cookiecutter templates&lt;/a&gt;, including Python, &lt;a class="reference external" href="https://github.com/sloria/cookiecutter-flask"&gt;Flask&lt;/a&gt;, &lt;a class="reference external" href="https://www.djangopackages.com/grids/g/cookiecutter/"&gt;Django&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-jquery"&gt;JQuery&lt;/a&gt; templates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There is already a &lt;a class="reference external" href="https://github.com/Nekroze/cookiecutter-pypackage"&gt;fork&lt;/a&gt; of cookiecutter-pypackage that even more closely matches Jeff Knupp's design.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="additional-cookiecutter-features"&gt;
&lt;h2&gt;Additional cookiecutter features&lt;/h2&gt;
&lt;p&gt;Here are more things to like about cookiecutter:&lt;/p&gt;
&lt;div class="section" id="cookiecutter-is-focused"&gt;
&lt;h3&gt;cookiecutter is focused&lt;/h3&gt;
&lt;p&gt;It doesn't handle deployment, serving of HTTP, testing, or anything else. All it does is project templates. It follows those classic words, &amp;quot;&lt;em&gt;It's programmed to do one thing and do it well&lt;/em&gt;&amp;quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="supports-all-modern-versions-of-python"&gt;
&lt;h3&gt;Supports all modern versions of Python&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python 2.6&lt;/li&gt;
&lt;li&gt;Python 2.7&lt;/li&gt;
&lt;li&gt;Python 3.3&lt;/li&gt;
&lt;li&gt;Even PyPy!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cookiecutter-is-modular"&gt;
&lt;h3&gt;cookiecutter is modular&lt;/h3&gt;
&lt;p&gt;It's not built off a single giant function, or a complex architecture. Instead, it's comprised of a number of relatively simple functions. Why? Well this way you can import easily elements of cookiecutter into other projects, and it plays into the next feature:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cookiecutter-is-tested"&gt;
&lt;h3&gt;cookiecutter is tested&lt;/h3&gt;
&lt;p&gt;The project has as of August 20th 2013, &lt;a class="reference external" href="https://coveralls.io/r/audreyr/cookiecutter?branch=master"&gt;98% test coverage&lt;/a&gt;, with an intention to increase it to 100%. This makes handling the following things much easier/safer:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Implementing new features without breaking existing ones.&lt;/li&gt;
&lt;li&gt;Handling new versions of Python as they emerge.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="cookiecutter-isn-t-just-for-python-packages"&gt;
&lt;h3&gt;cookiecutter isn't just for Python packages&lt;/h3&gt;
&lt;p&gt;That's correct. While at the moment there is only &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter-jquery"&gt;cookiecutter-jquery&lt;/a&gt;, there is nothing to stop developers from using &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt; to create templates for anything. The way it renders output is designed to accommodate customizations for any tool.&lt;/p&gt;
&lt;p&gt;Which brings me to my next point...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cookiecutter-isn-t-just-for-python-developers"&gt;
&lt;h3&gt;cookiecutter isn't just for Python developers&lt;/h3&gt;
&lt;p&gt;Even if you don't know Python you can use &lt;a class="reference external" href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt;. The templating is done via &lt;a class="reference external" href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;, which isn't far off from other template languages like Mustache, Handlebars, or Liquid. if you are worried about collisions between templating systems, just use Jinja2's &lt;cite&gt;{% raw %}&lt;/cite&gt; template tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;{# Jinja2&amp;#39;s raw template to escape the Liquid template inside #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;raw&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt; {# Liquid template from here on #}
&amp;lt;ul id=&amp;quot;products&amp;quot;&amp;gt;
{% for product in products %}
&amp;lt;li&amp;gt;
  &amp;lt;h2&amp;gt;{{ product.title }}&amp;lt;/h2&amp;gt;
  Only {{ product.price | format_as_money }}

  &amp;lt;p&amp;gt;{{ product.description | prettyprint | truncate: 200  }}&amp;lt;/p&amp;gt;

&amp;lt;/li&amp;gt;
{% endfor %}
&amp;lt;/ul&amp;gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endraw&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;a class="reference external image-reference" href="https://github.com/audreyr/cookiecutter"&gt;&lt;img alt="" src="https://raw.github.com/audreyr/cookiecutter/aa309b73bdc974788ba265d843a65bb94c2e608e/cookiecutter_medium.png" /&gt;&lt;/a&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Update 09/20/2013&lt;/strong&gt;: Test coverage increased to 98% from 91%.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="django"></category><category term="rant"></category><category term="flask"></category><category term="pypi"></category><category term="pypy"></category><category term="python3"></category><category term="javascript"></category><category term="audrey"></category><category term="cookiecutter"></category></entry><entry><title>Two years ago today</title><link href="https://pydanny.com/two-years-ago-today.html" rel="alternate"></link><published>2012-02-17T09:20:00-08:00</published><updated>2012-02-17T09:20:00-08:00</updated><author><name>Daniel-Roy-Greenfeld</name></author><id>tag:pydanny.com,2012-02-17:/two-years-ago-today.html</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="http://us.pycon.org"&gt;PyCon&lt;/a&gt; tutorial on Django in Depth was ending. I had been sitting next to my friend &lt;a class="reference external" href="http://djangrrl.com/"&gt;Barbara&lt;/a&gt; and we got up to go when I heard a feminine voice ask: &amp;quot;Are you &lt;a class="reference external" href="https://twitter.com/bshaurette"&gt;bshaurette&lt;/a&gt;?&amp;quot; I turned and it was like I got punched in the gut.&lt;/p&gt;
&lt;p&gt;It was the first â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="http://us.pycon.org"&gt;PyCon&lt;/a&gt; tutorial on Django in Depth was ending. I had been sitting next to my friend &lt;a class="reference external" href="http://djangrrl.com/"&gt;Barbara&lt;/a&gt; and we got up to go when I heard a feminine voice ask: &amp;quot;Are you &lt;a class="reference external" href="https://twitter.com/bshaurette"&gt;bshaurette&lt;/a&gt;?&amp;quot; I turned and it was like I got punched in the gut.&lt;/p&gt;
&lt;p&gt;It was the first time I met &lt;a class="reference external" href="http://audreymroy.com"&gt;Audrey&lt;/a&gt;. I remember every detail of how she looked at that moment. The clothes she was wearing, the part in her hair, that her eyes met mine, and that they didn't turn away. I was immediately captivating, but fortunately remembered to act like a gentleman. I tossed in a casual invitation to her to join us for lunch, which I pulled off even though my heart was pounding. Thankfully she accepted.&lt;/p&gt;
&lt;p&gt;Life has been pretty much awesome ever since.&lt;/p&gt;
&lt;p&gt;That was the day I met the love of my life.&lt;/p&gt;
</content><category term="pycon"></category><category term="audrey"></category></entry></feed>